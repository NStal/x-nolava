// Generated by CoffeeScript 1.10.0
(function() {
  var KeyMaster,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  KeyMaster = (function(superClass) {
    extend(KeyMaster, superClass);

    function KeyMaster() {
      var keys;
      KeyMaster.__super__.constructor.call(this);
      this.attachTo(window);
      this.master();
      keys = ["up", "down", "right", "left", "space", "w"];
      this.Key = [];
      this.on("keydown", (function(_this) {
        return function(e) {
          var i, key, len, results;
          results = [];
          for (i = 0, len = keys.length; i < len; i++) {
            key = keys[i];
            if (Leaf.Key[key] === e.which) {
              _this.Key[key] = true;
              break;
            } else {
              results.push(void 0);
            }
          }
          return results;
        };
      })(this));
      this.on("keyup", (function(_this) {
        return function(e) {
          var i, key, len, results;
          results = [];
          for (i = 0, len = keys.length; i < len; i++) {
            key = keys[i];
            if (Leaf.Key[key] === e.which) {
              _this.Key[key] = false;
              break;
            } else {
              results.push(void 0);
            }
          }
          return results;
        };
      })(this));
    }

    KeyMaster.prototype.solve = function() {
      var state;
      if (!Static.game.userShip) {
        console.log("not user ship, so can't control");
        return;
      }
      state = (this.Key.up && Ship.State.up || 0) | (this.Key.left && Ship.State.left || 0) | (this.Key.down && Ship.State.down || 0) | (this.Key.right && Ship.State.right || 0) | (this.Key.w && Ship.State.forward || 0) | (this.Key.space && Ship.State.fire || 0);
      if (state !== Static.game.userShip.state) {
        return Static.game.server.update(state);
      }
    };

    return KeyMaster;

  })(Leaf.KeyEventManager);

  Static.KeyMaster = KeyMaster;

}).call(this);
